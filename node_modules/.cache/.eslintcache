[{"/Users/Hao/Documents/Hao/React/memo_practice/src/index.tsx":"1","/Users/Hao/Documents/Hao/React/memo_practice/src/pages/Home/index.tsx":"2","/Users/Hao/Documents/Hao/React/memo_practice/src/pages/Home/components/Edit.tsx":"3","/Users/Hao/Documents/Hao/React/memo_practice/src/global/constants.ts":"4","/Users/Hao/Documents/Hao/React/memo_practice/src/pages/Home/components/Item.tsx":"5","/Users/Hao/Documents/Hao/Github Repo/simple_memorandum/src/index.tsx":"6","/Users/Hao/Documents/Hao/Github Repo/simple_memorandum/src/pages/Home/index.tsx":"7","/Users/Hao/Documents/Hao/Github Repo/simple_memorandum/src/global/constants.ts":"8","/Users/Hao/Documents/Hao/Github Repo/simple_memorandum/src/pages/Home/components/Item.tsx":"9","/Users/Hao/Documents/Hao/Github Repo/simple_memorandum/src/pages/Home/components/Edit.tsx":"10"},{"size":226,"mtime":1622900103558,"results":"11","hashOfConfig":"12"},{"size":1667,"mtime":1623227260152,"results":"13","hashOfConfig":"12"},{"size":1191,"mtime":1623225312522,"results":"14","hashOfConfig":"12"},{"size":97,"mtime":1623227048036,"results":"15","hashOfConfig":"12"},{"size":475,"mtime":1623226864808,"results":"16","hashOfConfig":"12"},{"size":226,"mtime":1622900103558,"results":"17","hashOfConfig":"18"},{"size":1667,"mtime":1623227260152,"results":"19","hashOfConfig":"18"},{"size":97,"mtime":1623227048036,"results":"20","hashOfConfig":"18"},{"size":475,"mtime":1623226864808,"results":"21","hashOfConfig":"18"},{"size":1191,"mtime":1623225312522,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"14aa1bw",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hrunbt",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Hao/Documents/Hao/React/memo_practice/src/index.tsx",[],["45","46"],"/Users/Hao/Documents/Hao/React/memo_practice/src/pages/Home/index.tsx",["47"],"import React, { createContext, useEffect, useRef, useState } from 'react';\nimport './index.css';\nimport Edit from './components/Edit'\nimport { API_GET_DATA } from '../../global/constants'\nimport Item from './components/Item';\n\nasync function fetchData(setData:React.Dispatch<React.SetStateAction<dataProps[]>>) {\n  const results = await fetch(API_GET_DATA);\n  const { data } = await results.json();\n  setData(data);\n}\n\nasync function fetchSetData(data:dataProps[]) {\n  await fetch(API_GET_DATA, {\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify( {data} )\n  })\n}\n\ndeclare global {\n  type dataProps = {\n    id: string,\n    note: string, \n    date: string,\n    time: string\n  };\n\n  type modifyProps = {\n    setData: React.Dispatch<React.SetStateAction<dataProps[]>>,\n    submitData: React.MutableRefObject<boolean>\n  }\n}\n\nconst Home = () => {\n  const [data, setData] = useState<dataProps[]>([]);\n  const submitData = useRef(false);\n\n  useEffect(() => {\n    if (!submitData.current){\n      return;\n    }\n    fetchSetData(data).then(_ => {submitData.current = false})\n  }, [data])\n\n  useEffect(() => {\n    fetchData(setData);\n  }, [])\n\n  return <div className=\"app\">\n    <Edit setData={setData} submitData={submitData} />\n    <div className=\"list\">\n      {\n        data.map((item) => {\n          const { id, note, date, time } = item;\n          return <Item \n            key={id}\n            id={id}\n            note={note}\n            date={date}\n            time={time}\n            setData={setData}\n            submitData={submitData}\n          />\n        })\n      }\n    </div>\n  </div>\n}\n\nexport default Home;","/Users/Hao/Documents/Hao/React/memo_practice/src/pages/Home/components/Edit.tsx",[],"/Users/Hao/Documents/Hao/React/memo_practice/src/global/constants.ts",[],"/Users/Hao/Documents/Hao/React/memo_practice/src/pages/Home/components/Item.tsx",[],"/Users/Hao/Documents/Hao/Github Repo/simple_memorandum/src/index.tsx",[],"/Users/Hao/Documents/Hao/Github Repo/simple_memorandum/src/pages/Home/index.tsx",["48"],"/Users/Hao/Documents/Hao/Github Repo/simple_memorandum/src/global/constants.ts",[],"/Users/Hao/Documents/Hao/Github Repo/simple_memorandum/src/pages/Home/components/Item.tsx",[],"/Users/Hao/Documents/Hao/Github Repo/simple_memorandum/src/pages/Home/components/Edit.tsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":30},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":30},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]